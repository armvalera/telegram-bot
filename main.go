package main

import (
	"log"
	"os"
	"telegram-bot/predictions"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

var bot *tgbotapi.BotAPI

func TgBot() {
	apiKey := os.Getenv("TELEGRAM_API_KEY")
	if apiKey == "" {
		log.Fatal("TELEGRAM_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
	}

	var err error
	bot, err = tgbotapi.NewBotAPI(apiKey)
	if err != nil {
		log.Fatal(err)
	}
	bot.Debug = true
	log.Printf("Authorized on account %s", bot.Self.UserName)
}

func handleMessage(messageText string, chatID int64) {
	if len(predictions.PredictionsMap) == 0 {
		log.Println("–î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
		msg := tgbotapi.NewMessage(chatID, "–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
		if _, err := bot.Send(msg); err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", err)
		}
		return
	}

	topic, err := predictions.ProcessMessage(messageText)
	if err != nil {
		log.Println("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", err)
		topic = predictions.GetRandomPrediction()
	}

	response := "–¢—ã —Å–ø—Ä–∞—à–∏–≤–∞–ª: " + messageText + "\n–û—Ç–≤–µ—Ç –æ—Ç –æ—Ä–∞–∫—É–ª–∞: " + topic
	msg := tgbotapi.NewMessage(chatID, response)
	if _, err := bot.Send(msg); err != nil {
		log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", err)
	}
}

func main() {
	log.Println("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")

	// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π
	log.Println("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")
	predictions.LoadData()

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
	log.Println("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")
	TgBot()

	log.Println("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")

	// –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	updates := bot.GetUpdatesChan(u)

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
	for update := range updates {
		if update.Message == nil {
			continue
		}

		if update.Message.Text == "/start" {
			msg := tgbotapi.NewMessage(update.Message.Chat.ID,
				"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –∏—Å–∫–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–æ–≤! –Ø ‚Äî —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –æ—Ä–∞–∫—É–ª. üîÆ –¢—ã –≥–æ—Ç–æ–≤ —É–∑–Ω–∞—Ç—å, —á—Ç–æ –∂–¥—ë—Ç —Ç–µ–±—è –≤ –±—É–¥—É—â–µ–º? –ó–∞–¥–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ–¥—Å–∫–∞–∂—É, —á—Ç–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª –¥–ª—è —Ç–µ–±—è –º–∏—Ä.")
			if _, err := bot.Send(msg); err != nil {
				log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:", err)
			}
		} else if update.Message.Text == "/help" {
			msg := tgbotapi.NewMessage(update.Message.Chat.ID,
				"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n/help - –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É")
			if _, err := bot.Send(msg); err != nil {
				log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", err)
			}
		} else {
			handleMessage(update.Message.Text, update.Message.Chat.ID)
		}
	}
}